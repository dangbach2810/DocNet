<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>